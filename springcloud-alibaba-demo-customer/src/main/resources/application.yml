server:
  port: 8011

spring:
  application:
    # 服务名称尽量用-，不要用_，不要用特殊字符
    name: customer
  cloud:
    nacos:
      discovery:
        # 指定nacos server的地址
        server-addr: localhost:8848
    # 向sentinel控制台注册服务
    sentinel:
      filter:
        enabled: false
      transport:
        # port端口配置会在应用对应的机器上启动一个 Http Server，该 Server 会与 Sentinel 控制台做交互。
        # 比如 Sentinel 控制台添加了一个限流规则，会把规则数据 push 给这个 Http Server 接收，Http Server 再将规则注册到 Sentinel 中。
        # 如果不设置，会自动从8719开始扫描，依次+1，直到找到未被占用的端口
        port: 8719
        # 指定控制台地址
        dashboard: localhost:8080
        # 心跳发送周期，默认值null
        # 但在simpleHttpHeartbeatSender会默认值10秒
        heartbeat-interval-ms: 10000
      # 取消懒加载
      eager: true
management:
  endpoints:
    web:
      exposure:
        include: '*'

customer:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
ribbon:
  ReadTimeout: 1
  ConnectTimeout: 1
  # ribbon饥饿加载
  eager-load:
    enabled: true
    clients: customer
feign:
  sentinel:
    # 为feign整合sentinel
    enabled: true
  client:
    config:
      # 全局配置
      default:
        loggerLevel: full
        connectTimeout: 1000
        readTimeout: 1000
  httpclient:
    connection-timeout: 2000



#logging:
#  level:
#    com.customer.configuration.GlobalFeignConfiguration:debug
resttemplate:
  sentinel:
    enabled: true
